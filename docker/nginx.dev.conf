worker_processes 1;
error_log /dev/stdout info;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;
    sendfile        on;
    keepalive_timeout  65;

    map $http_origin $cors_origin {
        default $http_origin;
        "~^https?://localhost(:[0-9]+)?$" $http_origin;
        "~^https?://dev.vivabite.life$" $http_origin;
    }

    limit_req_zone $binary_remote_addr zone=rest_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=grpc_limit:10m rate=20r/s;

    upstream app-backend {
        server host.docker.internal:9100;
    }

    upstream app-frontend {
        server host.docker.internal:4200;
    }

    upstream hmr-frontend {
        server host.docker.internal:5173;
    }


    server {
        listen 80;

        # ====================
        # NestJS API gRPC
        # ====================
        location /api/grpc {
            rewrite ^/api/grpc/(.*) /$1 break;

            grpc_set_header Content-Type $http_content_type;
            grpc_set_header X-Grpc-Web $http_x_grpc_web;
            grpc_set_header X-User-Agent $http_x_user_agent;

            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, X-Grpc-Web, X-User-Agent' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'Set-Cookie, Grpc-Status, Grpc-Message, Grpc-Encoding, Grpc-Accept-Encoding' always;
            add_header 'Access-Control-Max-Age' 1728000 always;

            if ($request_method = OPTIONS) {
                add_header Content-Type "text/plain charset=UTF-8" always;
                add_header Content-Length 0;
                return 204;
            }

            grpc_pass grpc://app-backend;
        }


        # ====================
        # VITE
        # ====================
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://app-frontend;
        }

        # ====================
        # VITE hot reload (WS)
        # ====================
        location /sockjs-node/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;

            proxy_pass http://hmr-frontend; # Тот же порт где работает Vite
        }

    }
}
